{"ast":null,"code":"import _classCallCheck from \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\HackSC19\\\\webapp\\\\project\\\\HackSC\\\\src\\\\Main.jsx\";\nimport React from 'react';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      imageURL: ''\n    };\n    _this.handleUploadImage = _this.handleUploadImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"handleUploadImage\",\n    value: function handleUploadImage(ev) {\n      var _this2 = this;\n\n      ev.preventDefault();\n      var data = new FormData();\n      data.append('file', this.uploadInput.files[0]);\n      data.append('filename', this.fileName.value);\n      fetch('http://localhost:5000/upload/', {\n        method: 'POST',\n        bode: data\n      }).then(function (response) {\n        response.json().then(function (body) {\n          _this2.setState({\n            imageURL: \"http://localhost:5000/\".concat(body.file)\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.handleUploadImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(_ref) {\n          _this3.uploadInput = _ref;\n        },\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(_ref2) {\n          _this3.fileName = _ref2;\n        },\n        type: \"text\",\n        placeholder: \"Enter the desired name of file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"img\", {\n        src: this.state.imageURL,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["D:\\HackSC19\\webapp\\project\\HackSC\\src\\Main.jsx"],"names":["React","Main","props","state","imageURL","handleUploadImage","bind","ev","preventDefault","data","FormData","append","uploadInput","files","fileName","value","fetch","method","bode","then","response","json","body","setState","file","ref","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAPe;AAQlB;;;;sCAEiBC,E,EAAI;AAAA;;AAClBA,MAAAA,EAAE,CAACC,cAAH;AAEA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKC,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,CAApB;AACAJ,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKG,QAAL,CAAcC,KAAtC;AAEAC,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,IAAI,EAAET;AAF6B,OAAlC,CAAL,CAGGU,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAACG,IAAD,EAAU;AAC3B,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEnB,YAAAA,QAAQ,kCAA2BkB,IAAI,CAACE,IAAhC;AAAV,WAAd;AACH,SAFD;AAGH,OAPD;AAQH;;;6BAEQ;AAAA;;AACL,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKnB,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAE,aAACoB,IAAD,EAAS;AAAE,UAAA,MAAI,CAACb,WAAL,GAAmBa,IAAnB;AAAyB,SAAhD;AAAkD,QAAA,IAAI,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAE,aAACA,KAAD,EAAS;AAAE,UAAA,MAAI,CAACX,QAAL,GAAgBW,KAAhB;AAAsB,SAA7C;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,WAAW,EAAC,gCAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CARF,EAWE;AAAK,QAAA,GAAG,EAAE,KAAKtB,KAAL,CAAWC,QAArB;AAA+B,QAAA,GAAG,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAeH;;;;EA5CcJ,KAAK,CAAC0B,S;;AA+CzB,eAAezB,IAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            imageURL: '',\r\n        };\r\n\r\n        this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    }\r\n\r\n    handleUploadImage(ev) {\r\n        ev.preventDefault();\r\n\r\n        const data = new FormData();\r\n        data.append('file', this.uploadInput.files[0]);\r\n        data.append('filename', this.fileName.value);\r\n\r\n        fetch('http://localhost:5000/upload/', {\r\n            method: 'POST',\r\n            bode: data,\r\n        }).then((response) => {\r\n            response.json().then((body) => {\r\n                this.setState({ imageURL: `http://localhost:5000/${body.file}` })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <form onSubmit={this.handleUploadImage}>\r\n            <div>\r\n              <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\r\n            </div>\r\n            <div>\r\n              <input ref={(ref) => { this.fileName = ref; }} type=\"text\" placeholder=\"Enter the desired name of file\" />\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <button>Upload</button>\r\n            </div>\r\n            <img src={this.state.imageURL} alt=\"img\" />\r\n          </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}